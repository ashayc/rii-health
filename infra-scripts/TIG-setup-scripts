# TIG server setup
	# Ubuntu Server
		sudo apt update
		sudo apt upgrade
		sudo apt install ufw
		sudo ufw allow ssh
		sudo ufw enable
	# InfluxDB (influser / RII.covid-19)
		# line below is for Ubuntu Server 18.04, needs to be changed for other versions
		echo "deb https://repos.influxdata.com/ubuntu bionic stable" | sudo tee /etc/apt/sources.list.d/influxdb.list
		sudo curl -sL https://repos.influxdata.com/influxdb.key | sudo apt-key add -
		sudo apt update
		sudo apt install influxdb
		# configure influxdb (sudo nano /etc/influxdb/influxdb.conf)
			reporting-disabled = true
			# bind-address = "127.0.0.1:8088"
			[data]
				dir = "/var/lib/influxdb/data" # directory for TSM files, change for production deployments
				wal-dir = "/var/lib/influxdb/wal" # directory for WAL files, change for production deployments
			[monitor]
				store-enabled = true
				store-database = "_internal"
			[http]
				enabled = true
				auth-enabled = true
				
		sudo systemctl enable --now influxdb
		# sudo ufw allow from 0.0.0.0/24 to any port 8086
		sudo ufw allow 8086/tcp
		sudo nano /etc/influxdb/influxdb.conf --> [http] auth-enabled = true
		sudo systemctl restart influxdb
		curl -XPOST "http://localhost:8086/query" --data-urlencode "q=CREATE USER influser WITH PASSWORD 'RII.covid-19' WITH ALL PRIVILEGES"
		curl -G http://localhost:8086/query -u influser:RII.covid-19 --data-urlencode "q=SHOW DATABASES"
	# Grafana (ADMIN: admin / RII.covid-20; USER: AshayC / Welcome@1; HankT / Iotworks...123) : http://rii-tig.iotworks.solutions:3000/?orgId=1
		sudo apt install -y gnupg2 curl  software-properties-common
		curl https://packages.grafana.com/gpg.key | sudo apt-key add -
		sudo add-apt-repository "deb https://packages.grafana.com/oss/deb stable main"
		sudo apt update
		sudo apt -y install grafana
		# configure for globals, inputs and outputs (/etc/telegraf/telegraf.conf)
			##
		sudo systemctl enable --now grafana-server
		# sudo ufw allow from 0.0.0.0/24 to any port 3000
		sudo ufw allow 3000/tcp
		# browse to server: http://0.0.0.0:3000 and change defaults:
			password: admin:admin --> admin:RII.covid-20
			preferences: Organization, Theme, Timezone
		# install additional plugins/applications
			sudo grafana-cli plugins install raintank-worldping-app
			sudo grafana-cli plugins install grafana-clock-panel
			sudo grafana-cli plugins install agenty-flowcharting-panel
			sudo grafana-cli plugins install natel-influx-admin-panel
			sudo grafana-cli plugins install grafana-polystat-panel
			sudo grafana-cli plugins install grafana-simple-json-datasource
			sudo grafana-cli plugins install grafana-strava-datasource
			sudo grafana-cli plugins install alexandra-trackmap-panel
			sudo grafana-cli plugins install petrslavotinek-carpetplot-panel
		# grafana package details
			# Installs binary to /usr/sbin/grafana-server
			# Installs Init.d script to /etc/init.d/grafana-server
			# Creates default file (environment vars) to /etc/default/grafana-server
			# Installs configuration file to /etc/grafana/grafana.ini
			# Installs systemd service (if systemd is available) name grafana-server.service
			# The default configuration sets the log file at /var/log/grafana/grafana.log
			# The default configuration specifies a sqlite3 db at /var/lib/grafana/grafana.db
			# Installs HTML/JS/CSS and other Grafana files at /usr/share/grafana
	# Telegraf ( / )
		Linux
			# NOT required if already done for installing INFLUXDB
			# line below is for Ubuntu Server 18.04, needs to be changed for other versions
			# echo "deb https://repos.influxdata.com/ubuntu bionic stable" | sudo tee /etc/apt/sources.list.d/influxdb.list
			# sudo curl -sL https://repos.influxdata.com/influxdb.key | sudo apt-key add -
			sudo apt update
			sudo apt -y install telegraf
			# configure for globals, inputs and outputs (/etc/telegraf/telegraf.conf)
				# to add - mongodb, elasticsearch, influxdb, azure monitor, aws cloudwatch, nginx, nvidia_smi, operweathermap, procstat, lm-sensors, 
			telegraf -config /etc/telegraf/telegraf.conf -test
			sudo systemctl enable --now telegraf
		Windows
			mkdir C:\Program Files\Telegraf
			copy ~\Downloads\telegraf.* C:\Program Files\Telegraf
			C:\"Program Files"\Telegraf\telegraf.exe --service install
			# configure for globals, inputs and outputs (/etc/telegraf/telegraf.conf)
			"C:\Program Files\Telegraf\telegraf.exe" --config "C:\Program Files\Telegraf\telegraf.conf" --test
			net start telegraf
	# Nginx 
		sudo apt update
		sudo apt install nginx
		sudo ufw allow 'Nginx HTTP'
		sudo ufw status
		sudo systemctl status nginx
		sudo mkdir -p /var/www/<domain_name>/html
		sudo chown -R $USER:$USER /var/www/<domain_name>/html
		sudo chmod -R 755 /var/www/<domain_name>
		nano /var/www/<domain_name>/html/index.html
			<html>
				<head><title>Welcome to <domain_name>!</title></head>
				<body><h1>Success!  The <domain_name> server block is working!</h1></body>
			</html>
		sudo nano /etc/nginx/sites-available/<domain_name>
			server { listen 80;  root /var/www/<domain_name>/html;  index.html;  server_name <domain_name>;  location / { try_files $uri $uri/ =404; } }
		sudo ln -s /etc/nginx/sites-available/<domain_name> /etc/nginx/sites-enabled/
		sudo nano /etc/nginx/nginx.conf
			http {  ...   server_names_hash_bucket_size 64;   ...   }
		sudo nginx -t
		sudo systemctl restart nginx
	# CertBot SSL (www.iotworks.solutions, health.iotworks.solutions, tig.iotworks.solutions, tele.iotworks.solutions)
		sudo add-apt-repository ppa:certbot/certbot
		sudo apt install python-certbot-nginx
		sudo ufw allow 'Nginx Full'
		sudo ufw delete allow 'Nginx HTTP'
		sudo ufw status
		sudo certbot --nginx -d <domain_name> -d <sub_domain_names>
			https://www.ssllabs.com/ssltest/analyze.html?d=<sub_domain_names> # One sub-domain at a time
			Certificate chain: /etc/letsencrypt/live/<sub_domain_names>/fullchain.pem
			Key: /etc/letsencrypt/live/<sub_domain_names>/privkey.pem
			New/Update Cert: certbot "certonly"
			Auto Renew: certbot renew"
		sudo nginx -t
		sudo systemctl restart nginx
		
		
		
Reading Material:
	Windows Monitoring
		https://thenewstack.io/monitoring-windows-services-with-grafana-influxdb-%E2%80%8Eand-telegraf/
	Custom Metrics via Telegraf HTTP Plugin
		https://medium.com/@itsHabib/send-metrics-to-influxdb-with-telegrafs-http-plugin-fe90ea3ddf46
		https://blog.pythian.com/exporting-custom-metrics-influxdb/
		https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_tutorial/
		https://docs.influxdata.com/influxdb/v1.8/write_protocols/line_protocol_reference/
	InfluxDB Security
		https://docs.influxdata.com/influxdb/v1.8/administration/https_setup/
	True System Load
		http://www.brendangregg.com/blog/2017-08-08/linux-load-averages.html
	